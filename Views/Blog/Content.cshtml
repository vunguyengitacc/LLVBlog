@model LLVBog.Models.Blog
@using LLVBog.Models
@{
    ViewBag.Page = "Blog";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/vi_VN/sdk.js#xfbml=1&version=v11.0" nonce="j9dg0ybm"></script>
<div class="heading-page header-text">
    <section class="page-heading">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="text-content">
                        <h2>@Model.Title</h2>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<!-- Banner Ends Here -->
<section class="blog-contents">
    <div class="container">
        <div class="row">
            <div class="col-lg-1 col-sm-12 post-value">
                <div class="post-status sticky">
                    <div class="margin-bottom">
                        <a href="/Profile/Author?username=@Model.Account.Username">
                            @Model.Account.FirstName @Model.Account.LastName
                        </a>

                    </div>
                    <div class="margin-bottom">
                        <span class="fa fa-eye">&ensp;@Model.TotalView</span>
                    </div>
                    <div class="flex flex-column">
                        @{
                            var vote = Model.Actions.Where(item => item.Vote == true).Count() - Model.Actions.Where(item => item.Vote == false).Count();
                        }
                        @if (ViewBag.UserAction != null && ViewBag.UserAction.Vote != null)
                        {
                            if (ViewBag.UserAction.Vote == true)
                            {
                                <span class="fa fa-chevron-up vote-valid" id="vote-up" onclick="toggleVoteUp()"></span>
                                <h5 id="vote-display">@vote</h5>
                                <span class="fa fa-chevron-down vote" id="vote-down" onclick="toggleVoteDown()"></span>
                            }
                            else
                            {
                                <span class="fa fa-chevron-up vote" id="vote-up" onclick="toggleVoteUp()"></span>
                                <h5 id="vote-display">@vote</h5>
                                <span class="fa fa-chevron-down vote-valid" id="vote-down" onclick="toggleVoteDown()"></span>
                            }
                        }
                        else
                        {
                            <span class="fa fa-chevron-up vote" id="vote-up" onclick="toggleVoteUp()"></span>
                            <h5 id="vote-display">@vote</h5>
                            <span class="fa fa-chevron-down vote" id="vote-down" onclick="toggleVoteDown()"></span>
                        }

                    </div>
                </div>


            </div>

            <div class="col-lg-8 col-sm-12 custom-content">
                <div class="all-blog-posts">
                    <div class="row">
                        <div class="col-lg-12" id="blog-content" style="min-height: 40vh">
                            @Html.Raw(HttpUtility.HtmlDecode(Model.Content))
                        </div>

                    </div>
                </div>
            </div>


            <div class="col-lg-3 sidebar-block">
                <div class="sidebar" style="float: left; margin-left: 0 !important; width: 100%">
                    <div class="row">
                        <div class="col-lg-12 sidebar-content">
                            <div class="sidebar-item recent-posts sticky" style="width: 100%; margin-top: 5vh!important">
                                <div class="sidebar-heading">
                                    <h2 class="text-title">Mục lục</h2>
                                </div>
                                <div class="content" id="post-menu">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="container" style="margin-top: 30px;">
    <div class="row">
        <div class="sidebar-heading">
            <h5 class=" main-content-heading">Bài viết liên quan</h5>
        </div>
    </div>

</div>

<section class="blog-posts" style="margin-top: 0;">
    <div class="container">
        <div class="custom-grid-3">
            @foreach (var item in ViewBag.anotherPost)
            {
                <div>
                    <div class="all-blog-posts">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="blog-post custom-shadow row">
                                    <div class="down-content col-lg-12">
                                        <div class="post-options">
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    <ul class="post-tags">
                                                        <li><i class="fa fa-tags"></i></li>
                                                        @if (item.Categories.Count > 5)
                                                        {
                                                            foreach (var i in item.Categories.Take(5))
                                                            {
                                                                <li><a href="#">@i.Name</a></li>
                                                            }
                                                            <li><a href="#">...</a></li>
                                                        }
                                                        else
                                                        {
                                                            foreach (var i in item.Categories)
                                                            {
                                                                <li><a href="#">@i.Name</a></li>
                                                            }
                                                        }
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <a href="/Blog/Content/@item.BlogId">
                                            <h4 class="post-title">
                                                @item.Title
                                            </h4>
                                        </a>
                                        <ul class="post-info">
                                            <li><a href="/Profile/Author?username=@item.Account.Username">@item.Account.FirstName @item.Account.LastName</a></li>
                                            <li><a href="#">@item.CreatedDate</a></li>                                            
                                        </ul>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</section>
@if (ViewBag.IsAdminSession != null && ViewBag.IsAdminSession == true)
{
    <a href="#" onclick="toggleBlock()" class="float">
        <i class="fa fa-close my-float"></i>
    </a>
}
else
{
    <a href="#" onclick="report()" class="float">
        <i class="fa fa-exclamation-triangle my-float"></i>
    </a>

}
<div class="container"><div class="fb-comments" data-href="https://www.lvlblog.com/BLog/Content/@Model.BlogId" data-width="100%" data-numposts="5"></div></div>

@section scripts{
    <script>

        const blogContent = document.getElementById("blog-content");
        const menuRender = (element) => {
            let lstHeading = element.getElementsByTagName("h1");
            let menuNode = document.getElementById("post-menu");
            if (Object.values(lstHeading).length == 0) {
                element.style.marginBottom = "1vh"
                element.setAttribute("id", "heading-");
                let node = document.createElement("div");
                node.setAttribute("class", "content-item");
                let anchor = document.createElement("a");
                anchor.innerHTML = "Không có mục lục";
                anchor.style.color = "#E2DEDD";
                anchor.style.lineHeight = "3rem";
                anchor.style.height = "3rem";
                node.appendChild(anchor);
                menuNode.appendChild(node);
            }
            else
                Object.values(lstHeading).forEach((element, index) => {
                    element.style.marginBottom = "1vh"
                    element.setAttribute("id", "heading-" + index);
                    let node = document.createElement("div");
                    node.setAttribute("class", "content-item");
                    let anchor = document.createElement("a");
                    anchor.setAttribute("href", "#heading-" + index);
                    if (element.outerText.length > 20)
                        anchor.innerHTML = element.outerText.slice(0, 20) + '...';
                    else
                        anchor.innerHTML = element.outerText.slice(0, 20);
                    anchor.style.lineHeight = "3rem";
                    anchor.style.height = "3rem";
                    node.appendChild(anchor);
                    menuNode.appendChild(node);
                });
            let statusBarNode = document.getElementsByClassName("post-value")[0];
            let sideBarNode = document.getElementsByClassName("sidebar-content")[0];
            sideBarNode.style.height = blogContent.offsetHeight + "px";
            statusBarNode.style.height = blogContent.offsetHeight + "px";
        }
        menuRender(blogContent);


        const countTimeToRead = (para) => {
            let rs = 0;
            Object.values(para.getElementsByTagName('p')).forEach(item => {
                rs += item.innerHTML.split(' ').length;
            });
            return (rs / (500 / 60)) * 1000;
        }

        const convertView = (value) => {
            console.log(value);
            let strRS = value.toString();
            if (value >= 1000 && value < 1000000)
                strRS = Math.floor(value / 1000).toString() + 'k' + (value % 1000 >= 100 ? (value % 1000).toString()[0] : '');
            if (value >= 1000000)
                strRS = Math.floor(value / 1000000).toString() + 'm';
            return strRS;
        }
        const replaceView = (view) => {
            const viewNode = document.getElementsByClassName('fa-eye')[0];
            viewNode.innerHTML = "&ensp;"+convertView(view);
        }


        replaceView(@Model.TotalView);

        setTimeout(() => {
            $.ajax({
                type: "POST",
                url: '/Blog/IncreaseView?blogId=@Model.BlogId',
                success: (response) => {
                    if (response.result)
                        replaceView(response.view);
                },
                error: (xhr) => {
                    //debugger;
                    console.log(xhr.responseText);
                    alert("Đã xảy ra lỗi");
                }
            });
        }, countTimeToRead(blogContent));


        const toggleVoteUp = () => {
            console.log("vote")
            $.ajax({
                type: "POST",
                url: '/Action/ToggleVoteUp?blogId=@Model.BlogId',
                success: (response) => {
                    if (!response.result) {
                        if (response.type == 1) {
                            alert("Bạn phải đăng nhập để thực hiện chức năng này")
                        }
                        if (response.type == 2) {
                            alert("Sai thông tin")
                        }
                    }
                    else {
                        document.getElementById("vote-display").innerHTML = response.vote;
                        let voteEle = document.getElementById("vote-up");
                        if ($(voteEle).hasClass("vote-valid")) {
                            $(voteEle).removeClass("vote-valid").addClass("vote");
                        }
                        else
                            $(voteEle).removeClass("vote").addClass("vote-valid");
                        let voteDownEle = document.getElementById("vote-down");
                        if ($(voteDownEle).hasClass("vote-valid")) {
                            $(voteDownEle).removeClass("vote-valid").addClass("vote")
                        }
                    }
                },
                error: (xhr) => {
                    //debugger;
                    console.log(xhr.responseText);
                    alert("Đã xảy ra lỗi");
                }
            });
        }

        const toggleVoteDown = () => {
            $.ajax({
                type: "POST",
                url: '/Action/ToggleVoteDown?blogId=@Model.BlogId',
                success: (response) => {
                    if (!response.result) {
                        if (response.type == 1) {
                            alert("Bạn phải đăng nhập để thực hiện chức năng này")
                        }
                        if (response.type == 2) {
                            alert("Sai thông tin")
                        }
                    }
                    else {
                        document.getElementById("vote-display").innerHTML = response.vote;
                        let voteEle = document.getElementById("vote-down");
                        if ($(voteEle).hasClass("vote-valid")) {
                            $(voteEle).removeClass("vote-valid").addClass("vote");
                        }
                        else
                            $(voteEle).removeClass("vote").addClass("vote-valid");
                        let voteUpEle = document.getElementById("vote-up");
                        if ($(voteUpEle).hasClass("vote-valid")) {
                            $(voteUpEle).removeClass("vote-valid").addClass("vote")
                        }
                    }
                },
                error: (xhr) => {
                    //debugger;
                    console.log(xhr.responseText);
                    alert("Đã xảy ra lỗi");
                }
            });
        }

        const report = () => {
            $.ajax({
                type: "POST",
                url: '/Action/Report?blogId=@Model.BlogId',
                success: (response) => {
                    if (!response.result) {
                        if (response.type == 1) {
                            alert("Bạn phải đăng nhập để thực hiện chức năng này")
                        }
                        if (response.type == 2) {
                            alert("Sai thông tin")
                        }
                    }
                    else alert("Bạn đã báo cáo bài viết này với admin!")

                },
                error: (xhr) => {
                    //debugger;
                    console.log(xhr.responseText);
                    alert("Đã xảy ra lỗi");
                }
            });
        }

        const toggleBlock = () => {
            $.ajax({
                type: "POST",
                url: '/Action/ToggleBlock?blogId=@Model.BlogId',
                success: (response) => {
                    if (!response.result) {
                        if (response.type == 1) {
                            alert("Bạn phải đăng nhập để thực hiện chức năng này")
                        }
                        if (response.type == 2) {
                            alert("Sai thông tin")
                        }
                    }
                    else if (response.type == 3) alert("Bạn đã mở khóa cho bài viết này")
                    else if (response.type == 4) alert("Bạn đã khóa bài viết này")

                },
                error: (xhr) => {
                    //debugger;
                    console.log(xhr.responseText);
                    alert("Đã xảy ra lỗi");
                }
            });
        }

    </script>
}
